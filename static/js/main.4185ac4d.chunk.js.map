{"version":3,"sources":["components/PostsList.tsx","components/Loader/Loader.tsx","components/NewCommentForm.tsx","components/PostDetails.tsx","components/UserSelector.tsx","utils/fetchClient.ts","App.tsx","index.tsx"],"names":["PostsList","React","memo","selectedUserPosts","onSelecPost","selectedPost","className","map","post","id","title","isSelected","type","cn","onClick","Loader","NewCommentForm","onChangeCommentAuthorName","onChangeCommentAuthorEmail","onChangeCommentContent","commentAuthorName","commentAuthorEmail","commentContent","onClearCommentForm","onCommentSubmit","hasFormError","isAddingComment","nameHasError","emailHasError","contentAreaHasError","onSubmit","htmlFor","name","placeholder","value","onChange","PostDetails","areCommentsLoading","comments","showAddComment","onShowAddComment","commentConent","onRemoveComment","hasCommentError","body","length","comment","commentId","commentName","commentEmail","email","commentBody","href","UserSelector","users","selectedUser","onSelectUser","isDropdownActive","setIsDropdownActive","dropdownRef","useRef","handleUsersDropdown","event","current","contains","target","useEffect","document","addEventListener","removeEventListener","ref","prevState","role","user","BASE_URL","wait","delay","Promise","resolve","setTimeout","request","url","method","data","options","JSON","stringify","headers","then","fetch","response","ok","Error","json","client","App","useState","setUsers","setSelectedUser","setSelectedUserPost","isLoading","setIsLoading","setAreCommentsLoading","hasError","setHasError","setSelectedPost","setComments","setShowAddComment","setCommentAuthorName","setCommentAuthorEmail","setCommentContent","setHasCommentError","setIsAddingComment","setHasFormError","loadUsers","a","usersFromServer","loadPosts","posts","handleSelectUser","useCallback","loadComments","loadedComments","handleSelectPost","handleShowAddComment","handleChangeCommentAuthorName","handleChangeCommentAuthorEmail","handleChangeCommentContent","handleClearCommentForm","handleCommentSubmit","preventDefault","postId","newComment","prevComments","handleRemoveComment","find","filter","classNames","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.4185ac4d.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Post } from '../types/Post';\n\ninterface PostsListProps {\n  selectedUserPosts: Post[];\n  onSelecPost: (post: Post) => void;\n  selectedPost: Post | null;\n}\n\nexport const PostsList: React.FC<PostsListProps> = React.memo(({\n  selectedUserPosts,\n  onSelecPost,\n  selectedPost,\n}) => (\n  <div data-cy=\"PostsList\">\n    <p className=\"title\">Posts:</p>\n\n    <table className=\"table is-fullwidth is-striped is-hoverable is-narrow\">\n      <thead>\n        <tr className=\"has-background-link-light\">\n          <th>#</th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {selectedUserPosts.map(post => {\n          const { id, title } = post;\n          const isSelected = selectedPost?.id === post.id;\n\n          return (\n            <tr data-cy=\"Post\" key={id}>\n              <td data-cy=\"PostId\">{id}</td>\n\n              <td data-cy=\"PostTitle\">\n                {title}\n              </td>\n\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  type=\"button\"\n                  data-cy=\"PostButton\"\n                  className={cn('button is-link', {\n                    'is-light': !isSelected,\n                  })}\n                  onClick={() => onSelecPost(post)}\n                >\n                  {isSelected ? 'Close' : 'Open'}\n                </button>\n              </td>\n            </tr>\n\n          );\n        })}\n      </tbody>\n    </table>\n  </div>\n));\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import cn from 'classnames';\nimport React from 'react';\n\ninterface NewCommentFormProps {\n  onChangeCommentAuthorName:\n  (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onChangeCommentAuthorEmail:\n  (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onChangeCommentContent:\n  (event: React.ChangeEvent<HTMLTextAreaElement>) => void;\n  commentAuthorName: string;\n  commentAuthorEmail: string;\n  commentContent: string;\n  onClearCommentForm: () => void;\n  onCommentSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n  hasFormError: boolean;\n  isAddingComment: boolean;\n}\n\nexport const NewCommentForm: React.FC<NewCommentFormProps> = React.memo(({\n  onChangeCommentAuthorName,\n  onChangeCommentAuthorEmail,\n  onChangeCommentContent,\n  commentAuthorName,\n  commentAuthorEmail,\n  commentContent,\n  onClearCommentForm,\n  onCommentSubmit,\n  hasFormError,\n  isAddingComment,\n}) => {\n  const nameHasError = hasFormError\n   && !commentAuthorName;\n  const emailHasError = hasFormError\n   && !commentAuthorEmail;\n  const contentAreaHasError = hasFormError\n   && !commentContent;\n\n  return (\n    <form data-cy=\"NewCommentForm\" onSubmit={onCommentSubmit}>\n      <div className=\"field\" data-cy=\"NameField\">\n        <label className=\"label\" htmlFor=\"comment-author-name\">\n          Author Name\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"comment-author-name\"\n            placeholder=\"Name Surname\"\n            className={cn('input', {\n              'is-danger': nameHasError,\n            })}\n            value={commentAuthorName}\n            onChange={onChangeCommentAuthorName}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-user\" />\n          </span>\n\n          {nameHasError && (\n            <span\n              className=\"icon is-small is-right has-text-danger\"\n              data-cy=\"ErrorIcon\"\n            >\n              <i className=\"fas fa-exclamation-triangle\" />\n            </span>\n          )}\n        </div>\n\n        {nameHasError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Name is required\n          </p>\n        ) }\n      </div>\n\n      <div className=\"field\" data-cy=\"EmailField\">\n        <label className=\"label\" htmlFor=\"comment-author-email\">\n          Author Email\n        </label>\n\n        <div className=\"control has-icons-left has-icons-right\">\n          <input\n            type=\"text\"\n            name=\"email\"\n            id=\"comment-author-email\"\n            placeholder=\"email@test.com\"\n            className={cn('input', {\n              'is-danger': emailHasError,\n            })}\n            value={commentAuthorEmail}\n            onChange={onChangeCommentAuthorEmail}\n          />\n\n          <span className=\"icon is-small is-left\">\n            <i className=\"fas fa-envelope\" />\n          </span>\n\n          {emailHasError && (\n            <span\n              className=\"icon is-small is-right has-text-danger\"\n              data-cy=\"ErrorIcon\"\n            >\n              <i className=\"fas fa-exclamation-triangle\" />\n            </span>\n          ) }\n        </div>\n\n        {emailHasError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Email is required\n          </p>\n        ) }\n      </div>\n\n      <div className=\"field\" data-cy=\"BodyField\">\n        <label className=\"label\" htmlFor=\"comment-body\">\n          Comment Text\n        </label>\n\n        <div className=\"control\">\n          <textarea\n            id=\"comment-body\"\n            name=\"body\"\n            placeholder=\"Type comment here\"\n            className={cn('textarea', {\n              'is-danger': contentAreaHasError,\n            })}\n            value={commentContent}\n            onChange={onChangeCommentContent}\n          />\n        </div>\n\n        {contentAreaHasError && (\n          <p className=\"help is-danger\" data-cy=\"ErrorMessage\">\n            Enter some text\n          </p>\n        ) }\n      </div>\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            className={cn('button is-link', {\n              'is-loading': isAddingComment,\n            })}\n          >\n            Add\n          </button>\n        </div>\n\n        <div className=\"control\">\n          {/* eslint-disable-next-line react/button-has-type */}\n          <button\n            type=\"reset\"\n            className=\"button is-link is-light\"\n            onClick={() => onClearCommentForm()}\n          >\n            Clear\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n});\n","import React from 'react';\nimport { Post } from '../types/Post';\nimport { Loader } from './Loader';\nimport { NewCommentForm } from './NewCommentForm';\nimport { Comment as CommentType } from '../types/Comment';\n\ninterface PostDetailsProps {\n  selectedPost: Post;\n  areCommentsLoading: boolean;\n  comments: CommentType[] | [];\n  hasError: boolean;\n  showAddComment: boolean,\n  onShowAddComment: () => void;\n  onChangeCommentAuthorName:\n  (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onChangeCommentAuthorEmail:\n  (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onChangeCommentContent:\n  (event: React.ChangeEvent<HTMLTextAreaElement>) => void;\n  commentAuthorName: string;\n  commentAuthorEmail: string;\n  commentContent: string;\n  onClearCommentForm: () => void;\n  onCommentSubmit: (event: React.FormEvent<HTMLFormElement>) => void;\n  hasFormError: boolean;\n  isAddingComment: boolean;\n  onRemoveComment: (id: number) => void;\n  hasCommentError: boolean;\n}\n\nexport const PostDetails: React.FC<PostDetailsProps> = React.memo(({\n  selectedPost,\n  areCommentsLoading,\n  comments,\n  showAddComment,\n  onShowAddComment,\n  commentAuthorName,\n  commentAuthorEmail,\n  commentContent: commentConent,\n  onChangeCommentAuthorName,\n  onChangeCommentAuthorEmail,\n  onChangeCommentContent,\n  onClearCommentForm,\n  onCommentSubmit,\n  hasFormError,\n  isAddingComment,\n  onRemoveComment,\n  hasCommentError,\n}) => {\n  const { id, title, body } = selectedPost;\n\n  return (\n    <div className=\"content\" data-cy=\"PostDetails\">\n      <div className=\"content\" data-cy=\"PostDetails\">\n        <div className=\"block\">\n          <h2 data-cy=\"PostTitle\">\n            {`#${id}: ${title}`}\n          </h2>\n\n          <p data-cy=\"PostBody\">\n            {body}\n          </p>\n        </div>\n\n        <div className=\"block\">\n          {areCommentsLoading && <Loader />}\n\n          {hasCommentError ? (\n            <div className=\"notification is-danger\" data-cy=\"CommentsError\">\n              Something went wrong\n            </div>\n          )\n            : (\n              <>\n                {!areCommentsLoading && comments.length === 0 && (\n                  <p className=\"title is-4\" data-cy=\"NoCommentsMessage\">\n                    No comments yet\n                  </p>\n                )}\n\n                {!areCommentsLoading && comments.length > 1\n                  && <p className=\"title is-4\">Comments:</p>}\n                {comments.length > 0 && comments.map(comment => {\n                  const {\n                    id: commentId,\n                    name: commentName,\n                    email: commentEmail,\n                    body: commentBody,\n                  } = comment;\n\n                  return (\n                    <article\n                      className=\"message is-small\"\n                      data-cy=\"Comment\"\n                      key={commentId}\n                    >\n                      <div className=\"message-header\">\n                        <a href={`mailto:${commentEmail}`} data-cy=\"CommentAuthor\">\n                          {commentName}\n                        </a>\n                        <button\n                          data-cy=\"CommentDelete\"\n                          type=\"button\"\n                          className=\"delete is-small\"\n                          aria-label=\"delete\"\n                          onClick={() => onRemoveComment(commentId)}\n                        >\n                          delete button\n                        </button>\n                      </div>\n\n                      <div className=\"message-body\" data-cy=\"CommentBody\">\n                        {commentBody}\n                      </div>\n                    </article>\n\n                  );\n                })}\n              </>\n            )}\n          {!areCommentsLoading && !showAddComment && !hasCommentError && (\n            <button\n              data-cy=\"WriteCommentButton\"\n              type=\"button\"\n              className=\"button is-link\"\n              onClick={onShowAddComment}\n            >\n              Write a comment\n            </button>\n          )}\n        </div>\n\n        {showAddComment\n        && (\n          <NewCommentForm\n            onChangeCommentAuthorName={onChangeCommentAuthorName}\n            onChangeCommentAuthorEmail={onChangeCommentAuthorEmail}\n            onChangeCommentContent={onChangeCommentContent}\n            commentAuthorName={commentAuthorName}\n            commentAuthorEmail={commentAuthorEmail}\n            commentContent={commentConent}\n            onClearCommentForm={onClearCommentForm}\n            onCommentSubmit={onCommentSubmit}\n            hasFormError={hasFormError}\n            isAddingComment={isAddingComment}\n          />\n        )}\n      </div>\n    </div>\n  );\n});\n","import React, { useEffect, useRef } from 'react';\nimport cn from 'classnames';\nimport { User } from '../types/User';\n\ninterface UserSelectorProps {\n  users: User[];\n  onSelectUser: (user: User | null) => void;\n  selectedUser: User | null;\n  isDropdownActive: boolean;\n  setIsDropdownActive: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport const UserSelector: React.FC<UserSelectorProps> = React.memo(({\n  users,\n  selectedUser,\n  onSelectUser,\n  isDropdownActive,\n  setIsDropdownActive,\n}) => {\n  const dropdownRef = useRef<HTMLDivElement>(null);\n\n  const handleUsersDropdown = (event: MouseEvent) => {\n    if (dropdownRef.current\n      && !dropdownRef.current.contains(event.target as HTMLDivElement)) {\n      setIsDropdownActive(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleUsersDropdown);\n\n    return () => {\n      document.removeEventListener('mousedown', handleUsersDropdown);\n    };\n  }, []);\n\n  return (\n    <div\n      data-cy=\"UserSelector\"\n      className={cn('dropdown', {\n        'is-active': isDropdownActive,\n      })}\n      ref={dropdownRef}\n    >\n      <div className=\"dropdown-trigger\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          aria-haspopup=\"true\"\n          aria-controls=\"dropdown-menu\"\n          onClick={() => setIsDropdownActive(prevState => !prevState)}\n        >\n          <span>{selectedUser ? selectedUser?.name : 'Choose a user'}</span>\n\n          <span className=\"icon is-small\">\n            <i className=\"fas fa-angle-down\" aria-hidden=\"true\" />\n          </span>\n        </button>\n      </div>\n\n      <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n\n        <div className=\"dropdown-content\">\n          {users.map(user => {\n            const { id, name } = user;\n\n            return (\n              <a\n                href={`#user-${id}`}\n                className={cn('dropdown-item', {\n                  'is-active': user.id === selectedUser?.id,\n                })}\n                onClick={() => onSelectUser(user)}\n                key={id}\n              >\n                {name}\n              </a>\n            );\n          })}\n        </div>\n\n      </div>\n    </div>\n  );\n});\n","const BASE_URL = 'https://mate.academy/students-api';\n\n// a promise resolved after a given delay\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\n// To have autocompletion and avoid mistypes\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null, // we can send any data to the server\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    // We add body and Content-Type only for the requests with data\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  // for a demo purpose we emulate a delay to see if Loaders work\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Request Failed');\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","import React, { useCallback, useEffect, useState } from 'react';\nimport 'bulma/bulma.sass';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport classNames from 'classnames';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\nimport { UserSelector } from './components/UserSelector';\nimport { Loader } from './components/Loader';\nimport { User } from './types/User';\nimport { client } from './utils/fetchClient';\nimport { Post } from './types/Post';\nimport { Comment as CommentType } from './types/Comment';\n\nexport const App: React.FC = () => {\n  const [users, setUsers] = useState<User[] | []>([]);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [selectedUserPosts, setSelectedUserPost] = useState<Post[] | []>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [areCommentsLoading, setAreCommentsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const [isDropdownActive, setIsDropdownActive] = useState(false);\n  const [selectedPost, setSelectedPost] = useState<Post | null>(null);\n  const [comments, setComments] = useState<CommentType[]>([]);\n  const [showAddComment, setShowAddComment] = useState(false);\n  const [commentAuthorName, setCommentAuthorName] = useState('');\n  const [commentAuthorEmail, setCommentAuthorEmail] = useState('');\n  const [commentContent, setCommentContent] = useState('');\n  const [hasCommentError, setHasCommentError] = useState(false);\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const [hasFormError, setHasFormError] = useState(false);\n\n  const loadUsers = async () => {\n    const usersFromServer = await client.get<User[]>('/users');\n\n    setUsers(usersFromServer);\n  };\n\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  const loadPosts = async (user: User | null) => {\n    if (user) {\n      try {\n        setIsLoading(true);\n        const posts = await client.get<Post[]>(`/posts?userId=${user.id}`);\n\n        setSelectedUserPost(posts);\n      } catch (error) {\n        setHasError(true);\n      } finally {\n        setIsLoading(false);\n        setSelectedPost(null);\n      }\n    }\n  };\n\n  const handleSelectUser = useCallback((user: User | null) => {\n    setIsDropdownActive(false);\n    setSelectedUser(null);\n    setSelectedPost(null);\n    setHasCommentError(false);\n    setHasError(false);\n    setSelectedUser(user);\n    loadPosts(user);\n  }, []);\n\n  const loadComments = async (post: Post | null) => {\n    if (post) {\n      setAreCommentsLoading(true);\n      try {\n        const loadedComments = await client.get<CommentType[]>(`/comments?postId=${post.id}`);\n\n        setComments(loadedComments);\n      } catch (error) {\n        setHasCommentError(true);\n      } finally {\n        setAreCommentsLoading(false);\n      }\n    }\n  };\n\n  const handleSelectPost = useCallback((post: Post | null) => {\n    if (selectedPost?.id === post?.id) {\n      setSelectedPost(null);\n\n      return;\n    }\n\n    setHasCommentError(false);\n    setComments([]);\n    setShowAddComment(false);\n    setSelectedPost(post);\n    loadComments(post);\n  }, [loadComments, selectedPost]);\n\n  const handleShowAddComment = useCallback(() => {\n    setShowAddComment(true);\n  }, []);\n\n  const handleChangeCommentAuthorName\n  = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setCommentAuthorName(event.target.value);\n  }, []);\n\n  const handleChangeCommentAuthorEmail\n  = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    setCommentAuthorEmail(event.target.value);\n  }, []);\n\n  const handleChangeCommentContent\n  = useCallback((event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setCommentContent(event.target.value);\n  }, []);\n\n  const handleClearCommentForm = useCallback(() => {\n    setHasFormError(false);\n    setCommentAuthorName('');\n    setCommentAuthorEmail('');\n    setCommentContent('');\n  }, []);\n\n  const handleCommentSubmit\n  = useCallback(async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (!commentAuthorEmail || !commentAuthorName || !commentContent) {\n      setHasFormError(true);\n\n      return;\n    }\n\n    setIsAddingComment(true);\n\n    try {\n      const newComment = await client.post<CommentType>('/comments', {\n        id: 0,\n        postId: selectedPost?.id,\n        name: commentAuthorName,\n        email: commentAuthorEmail,\n        body: commentContent,\n      });\n\n      setComments(prevComments => [...prevComments, newComment]);\n      setCommentContent('');\n      setHasFormError(false);\n    } catch (error) {\n      setHasFormError(true);\n    } finally {\n      setIsAddingComment(false);\n    }\n  }, [commentAuthorEmail, commentAuthorName, commentContent, selectedPost]);\n\n  const handleRemoveComment = useCallback(async (id: number) => {\n    const foundComment = comments.find(comment => comment.id === id);\n\n    if (foundComment) {\n      setComments(prevComments => prevComments\n        .filter(comment => comment.id !== id));\n      try {\n        await client.delete(`/comments/${id}`);\n      } catch (error) {\n        setHasError(true);\n      }\n    }\n  }, [comments]);\n\n  return (\n    <main className=\"section\">\n      <div className=\"container\">\n        <div className=\"tile is-ancestor\">\n          <div className=\"tile is-parent\">\n            <div className=\"tile is-child box is-success\">\n              <div className=\"block\">\n                <UserSelector\n                  isDropdownActive={isDropdownActive}\n                  setIsDropdownActive={setIsDropdownActive}\n                  users={users}\n                  onSelectUser={handleSelectUser}\n                  selectedUser={selectedUser}\n                />\n              </div>\n\n              <div className=\"block\" data-cy=\"MainContent\">\n                {!selectedUser && (\n                  <p data-cy=\"NoSelectedUser\">\n                    No user selected\n                  </p>\n                )}\n                {selectedUser && (\n                  <>\n                    {isLoading && <Loader />}\n\n                    {hasError ? (\n                      <div\n                        className=\"notification is-danger\"\n                        data-cy=\"PostsLoadingError\"\n                      >\n                        Something went wrong!\n                      </div>\n                    )\n                      : (\n                        <>\n                          {!isLoading && selectedUserPosts.length === 0\n                      && (\n                        <div\n                          className=\"notification is-warning\"\n                          data-cy=\"NoPostsYet\"\n                        >\n                          No posts yet\n                        </div>\n                      )}\n                          {!isLoading && selectedUserPosts.length > 0\n                     && (\n                       <PostsList\n                         selectedUserPosts={selectedUserPosts}\n                         onSelecPost={handleSelectPost}\n                         selectedPost={selectedPost}\n                       />\n                     )}\n                        </>\n                      )}\n                  </>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {!hasError && (\n            <div\n              data-cy=\"Sidebar\"\n              className={classNames(\n                'tile',\n                'is-parent',\n                'is-8-desktop',\n                'Sidebar',\n                { 'Sidebar--open': selectedPost },\n              )}\n            >\n              {selectedPost\n              && (\n                <div className=\"tile is-child box is-success \">\n                  <PostDetails\n                    selectedPost={selectedPost}\n                    areCommentsLoading={areCommentsLoading}\n                    comments={comments}\n                    hasError={hasError}\n                    onShowAddComment={handleShowAddComment}\n                    showAddComment={showAddComment}\n                    onChangeCommentAuthorName={handleChangeCommentAuthorName}\n                    onChangeCommentAuthorEmail={handleChangeCommentAuthorEmail}\n                    onChangeCommentContent={handleChangeCommentContent}\n                    commentAuthorName={commentAuthorName}\n                    commentAuthorEmail={commentAuthorEmail}\n                    commentContent={commentContent}\n                    onClearCommentForm={handleClearCommentForm}\n                    onCommentSubmit={handleCommentSubmit}\n                    hasFormError={hasFormError}\n                    isAddingComment={isAddingComment}\n                    onRemoveComment={handleRemoveComment}\n                    hasCommentError={hasCommentError}\n                  />\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}